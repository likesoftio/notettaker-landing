#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è Django REST Framework backend
–¥–ª—è –±–ª–æ–≥–∞ —Å –≥–æ—Ç–æ–≤—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏, API –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
"""

import os
import subprocess
import sys

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º"""
    print(f"\nüîÑ {description}")
    print(f"–í—ã–ø–æ–ª–Ω—è—é: {command}")
    
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    
    if result.returncode == 0:
        print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ")
        if result.stdout:
            print(result.stdout)
    else:
        print(f"‚ùå {description} - –æ—à–∏–±–∫–∞")
        print(f"Stderr: {result.stderr}")
        print(f"Stdout: {result.stdout}")
        return False
    
    return True

def create_project_structure():
    """–°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É Django –ø—Ä–æ–µ–∫—Ç–∞"""
    
    # –°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    if not run_command("python -m venv venv", "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è"):
        return False
    
    # –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞–∫–µ—Ç—ã
    activate_cmd = "venv\\Scripts\\activate" if os.name == 'nt' else "source venv/bin/activate"
    
    commands = [
        f"{activate_cmd} && pip install --upgrade pip",
        f"{activate_cmd} && pip install django>=4.2.0",
        f"{activate_cmd} && pip install djangorestframework>=3.14.0",
        f"{activate_cmd} && pip install djangorestframework-simplejwt>=5.3.0", 
        f"{activate_cmd} && pip install django-cors-headers>=4.3.0",
        f"{activate_cmd} && pip install pillow>=10.0.0",  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        f"{activate_cmd} && pip install python-decouple>=3.8",  # –î–ª—è env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    ]
    
    for cmd in commands:
        if not run_command(cmd, f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤: {cmd.split('&&')[-1].strip()}"):
            return False
    
    # –°–æ–∑–¥–∞—Ç—å Django –ø—Ä–æ–µ–∫—Ç
    activate_cmd = "venv\\Scripts\\activate" if os.name == 'nt' else "source venv/bin/activate"
    if not run_command(f"{activate_cmd} && django-admin startproject myblog .", "–°–æ–∑–¥–∞–Ω–∏–µ Django –ø—Ä–æ–µ–∫—Ç–∞"):
        return False
    
    # –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ blog
    if not run_command(f"{activate_cmd} && python manage.py startapp blog", "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è blog"):
        return False
    
    return True

def main():
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ Django REST Framework backend –¥–ª—è –±–ª–æ–≥–∞")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    try:
        result = subprocess.run([sys.executable, "--version"], capture_output=True, text=True)
        python_version = result.stdout.strip()
        print(f"‚úÖ Python –Ω–∞–π–¥–µ–Ω: {python_version}")
    except:
        print("‚ùå Python –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+")
        return
    
    # –°–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
    project_dir = "myblog_backend"
    
    if os.path.exists(project_dir):
        response = input(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {project_dir} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª–∏—Ç—å –µ—ë? (y/N): ")
        if response.lower() == 'y':
            import shutil
            shutil.rmtree(project_dir)
        else:
            print("–û—Ç–º–µ–Ω–µ–Ω–æ")
            return
    
    os.makedirs(project_dir)
    os.chdir(project_dir)
    
    print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    
    # –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    if create_project_structure():
        print("\nüéâ Backend —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. cd myblog_backend")
        print("2. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print("   - Windows: venv\\Scripts\\activate")
        print("   - Linux/Mac: source venv/bin/activate")
        print("3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        print("4. python manage.py migrate")
        print("5. python manage.py createsuperuser")
        print("6. python manage.py runserver 8000")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ backend'–∞")

if __name__ == "__main__":
    main()

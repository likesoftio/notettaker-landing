# Docker Compose для полного стека (React + Django + PostgreSQL)
# Скопируйте как docker-compose.yml и настройте под свои нужды

version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: myblog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Django backend
  backend:
    build:
      context: ./myblog_backend
      dockerfile: ../Dockerfile.django
    environment:
      - DEBUG=True
      - SECRET_KEY=your-secret-key-change-in-production
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/myblog
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
    volumes:
      - ./myblog_backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # React frontend (опционально, если хотите всё в Docker)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_USE_DRF=true
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data:

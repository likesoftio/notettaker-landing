#!/bin/bash
# –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ Django backend —Å Docker

set -e

echo "üê≥ –ó–∞–ø—É—Å–∫ Django backend —Å Docker"
echo "================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose"
    exit 1
fi

echo "‚úÖ Docker –Ω–∞–π–¥–µ–Ω: $(docker --version)"
echo "‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω: $(docker-compose --version)"

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f .env ]; then
    echo "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞..."
    cp .env.template .env
    echo "‚úÖ –°–æ–∑–¥–∞–Ω .env —Ñ–∞–π–ª. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Django –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f manage.py ]; then
    echo "üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã Django –ø—Ä–æ–µ–∫—Ç–∞..."
    python3 create_django_project.py
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Django —Ñ–∞–π–ª–æ–≤
REQUIRED_FILES=(
    "myblog/settings.py"
    "myblog/urls.py"
    "myblog/wsgi.py"
    "blog/models.py"
    "blog/views.py"
    "blog/serializers.py"
    "blog/urls.py"
    "blog/admin.py"
)

MISSING_FILES=()
for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        MISSING_FILES+=("$file")
    fi
done

if [ ${#MISSING_FILES[@]} -ne 0 ]; then
    echo "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ Django —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç:"
    printf '%s\n' "${MISSING_FILES[@]}"
    echo ""
    echo "üìö –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ DJANGO_SETUP_MANUAL.md –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã"
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø—É—Å–∫? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–æ–≤
echo "üîÑ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–æ–≤..."
docker-compose build

# –ó–∞–ø—É—Å–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîÑ –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ Redis..."
docker-compose up -d postgres redis

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
timeout 60s bash -c 'until docker-compose exec postgres pg_isready -U postgres; do sleep 1; done'

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo "üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π..."
docker-compose run --rm backend python manage.py migrate

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
echo ""
read -p "–°–æ–∑–¥–∞—Ç—å —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    docker-compose run --rm backend python manage.py createsuperuser
fi

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
docker-compose up -d

echo ""
echo "üéâ Django backend –∑–∞–ø—É—â–µ–Ω!"
echo ""
echo "üìç –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "   - API: http://localhost:8000/api/"
echo "   - Admin: http://localhost:8000/admin/"
echo "   - Swagger: http://localhost:8000/api/swagger/"
echo ""
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:"
echo "   - –õ–æ–≥–∏: docker-compose logs -f backend"
echo "   - –°—Ç–∞—Ç—É—Å: docker-compose ps"
echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞:"
echo "   - docker-compose down"
echo "   - docker-compose down -v  # —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö"
echo ""
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ React frontend:"
echo "   –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –≤ React –ø—Ä–æ–µ–∫—Ç–µ:"
echo "   VITE_API_URL=http://localhost:8000"
echo "   VITE_USE_DRF=true"

import React, { useEffect, useRef, useState } from "react";
import {
  Volume2,
  CheckCircle,
  Globe,
  Zap,
  Users,
  Settings,
} from "lucide-react";

export default function TranscriptionQuality() {
  const sectionRef = useRef<HTMLDivElement>(null);
  const [visibleElements, setVisibleElements] = useState<boolean[]>([]);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const index = parseInt(
              entry.target.getAttribute("data-index") || "0",
            );
            setVisibleElements((prev) => {
              const newState = [...prev];
              newState[index] = true;
              return newState;
            });
          }
        });
      },
      { threshold: 0.1 },
    );

    const elements = sectionRef.current?.querySelectorAll(".animate-on-scroll");
    elements?.forEach((el, index) => {
      el.setAttribute("data-index", index.toString());
      observer.observe(el);
    });

    return () => observer.disconnect();
  }, []);

  const languages = [
    { code: "üá∑üá∫", name: "–†—É—Å—Å–∫–∏–π", accuracy: "98%" },
    { code: "üá∫üá∏", name: "English", accuracy: "99%" },
    { code: "üá©üá™", name: "Deutsch", accuracy: "97%" },
    { code: "üá´üá∑", name: "Fran√ßais", accuracy: "96%" },
    { code: "üá™üá∏", name: "Espa√±ol", accuracy: "97%" },
    { code: "üáÆüáπ", name: "Italiano", accuracy: "96%" },
    { code: "üáØüáµ", name: "Êó•Êú¨Ë™û", accuracy: "95%" },
    { code: "üá®üá≥", name: "‰∏≠Êñá", accuracy: "94%" },
    { code: "üá∞üá∑", name: "ÌïúÍµ≠Ïñ¥", accuracy: "93%" },
    { code: "üá≥üá±", name: "Nederlands", accuracy: "96%" },
    { code: "üáµüáπ", name: "Portugu√™s", accuracy: "95%" },
    { code: "üá∏üá™", name: "Svenska", accuracy: "94%" },
  ];

  const features = [
    {
      icon: Volume2,
      title: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–ø–∏–∫–µ—Ä–æ–≤",
      description:
        "–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∏–∫–µ—Ä–æ–≤, —á—Ç–æ–±—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–∏–ª—Å—è —Ç–æ—á–Ω–µ–µ",
      color: "blue",
    },
    {
      icon: CheckCircle,
      title: "–û—á–∏—Å—Ç–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞",
      description: '–£–±–∏—Ä–∞–µ–º –∏–∑ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞ "–Ω—É", "–º–¥–∞" –∏ –ø—Ä–æ—á–∏–µ —Å–ª–æ–≤–∞-–ø–∞—Ä–∞–∑–∏—Ç—ã',
      color: "green",
    },
    {
      icon: Zap,
      title: "–í—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏",
      description:
        "–£–º–µ–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±—ã—Å—Ç—Ä–æ: —á–∞—Å–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—Å—è –≤ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –∑–∞ 5 –º–∏–Ω—É—Ç",
      color: "yellow",
    },
    {
      icon: Settings,
      title: "AI-—É–ª—É—á—à–µ–Ω–∏–µ –∑–≤—É–∫–∞ –≤—Å—Ç—Ä–µ—á–∏",
      description:
        "–ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–¥–µ–ª—å–Ω—É—é –º–æ–¥–µ–ª—å –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –¥–æ—Ä–æ–∂–∫–∏ –æ—Ç —à—É–º–æ–≤ –∏ –ø–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö –∑–≤—É–∫–æ–≤ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π",
      color: "purple",
    },
  ];

  const waveformData = Array.from({ length: 50 }, () => Math.random() * 100);

  return (
    <section
      ref={sectionRef}
      className="relative py-20 lg:py-32 bg-white dark:bg-gray-900 overflow-hidden"
    >
      {/* –§–æ–Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
      <div className="absolute inset-0 opacity-5">
        <div className="absolute top-0 left-0 w-full h-full">
          {Array.from({ length: 20 }).map((_, i) => (
            <div
              key={i}
              className="absolute rounded-full bg-blue-500"
              style={{
                left: `${Math.random() * 100}%`,
                top: `${Math.random() * 100}%`,
                width: `${Math.random() * 4 + 1}px`,
                height: `${Math.random() * 4 + 1}px`,
                animationDelay: `${Math.random() * 3}s`,
              }}
            />
          ))}
        </div>
      </div>

      <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-20 animate-on-scroll">
          <div className="inline-flex items-center gap-2 bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400 px-4 py-2 rounded-full text-sm font-medium mb-6">
            <Volume2 className="w-4 h-4" />
            –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç
          </div>
          <h2 className="text-4xl lg:text-6xl font-bold text-gray-900 dark:text-white mb-6 leading-tight">
            –¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞{" "}
            <span className="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
              —Å –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é
            </span>
          </h2>
          <p className="text-xl text-gray-600 dark:text-gray-300 max-w-4xl mx-auto leading-relaxed">
            –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–∞–ø–∏—Å—å –≤ –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç –∑–∞ –º–∏–Ω—É—Ç—ã: —Å–æ—Ö—Ä–∞–Ω–∏–º –∑–Ω–∞–∫–∏,
            —É–±–µ—Ä—ë–º —Å–ª–æ–≤–∞-–ø–∞—Ä–∞–∑–∏—Ç—ã –∏ —Ä–∞–∑–¥–µ–ª–∏–º —Ç–µ–∫—Å—Ç –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º
          </p>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ —Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–µ–π */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 lg:gap-16 items-center mb-20">
          {/* –õ–µ–≤–∞—è —á–∞—Å—Ç—å - —Å–ø–∏–∫–µ—Ä—ã –∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç */}
          <div className="animate-on-scroll">
            <div className="bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-gray-800 dark:to-gray-700 rounded-3xl p-8 border border-blue-200 dark:border-gray-600">
              {/* –£—á–∞—Å—Ç–Ω–∏–∫–∏ */}
              <div className="flex items-center gap-4 mb-6">
                <div className="flex items-center gap-2">
                  <div className="w-3 h-3 bg-blue-500 rounded-full animate-pulse"></div>
                  <span className="text-sm font-medium text-gray-700 dark:text-gray-300">
                    –ï–ª–∏–∑–∞–≤–µ—Ç–∞ 1:54
                  </span>
                </div>
                <div className="flex items-center gap-2">
                  <div className="w-3 h-3 bg-green-500 rounded-full"></div>
                  <span className="text-sm font-medium text-gray-700 dark:text-gray-300">
                    –ü–æ–ª–∏–Ω–∞ 1:54
                  </span>
                </div>
                <div className="flex items-center gap-2">
                  <div className="w-3 h-3 bg-purple-500 rounded-full"></div>
                  <span className="text-sm font-medium text-gray-700 dark:text-gray-300">
                    –ê–ª–µ–∫—Å–µ–π 1:54
                  </span>
                </div>
              </div>

              {/* –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∑–≤—É–∫–æ–≤–æ–π –≤–æ–ª–Ω—ã */}
              <div className="bg-white dark:bg-gray-800 rounded-xl p-4 mb-6">
                <div className="flex items-center justify-center gap-1 h-16">
                  {waveformData.map((height, i) => (
                    <div
                      key={i}
                      className="bg-gradient-to-t from-blue-600 to-blue-400 rounded-full transition-all duration-300"
                      style={{
                        width: "4px",
                        height: `${height}%`,
                        animationDelay: `${i * 50}ms`,
                      }}
                    />
                  ))}
                </div>

                {/* –¢–µ–∫—É—â–∏–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç */}
                <div className="mt-4 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg">
                  <div className="text-blue-600 dark:text-blue-400 text-sm font-medium mb-1">
                    –°–µ–π—á–∞—Å –≥–æ–≤–æ—Ä–∏—Ç: –ï–ª–∏–∑–∞–≤–µ—Ç–∞
                  </div>
                  <div className="text-gray-800 dark:text-gray-200 font-mono text-sm">
                    "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞ —É –≤—Å–µ—Ö?"
                  </div>
                </div>
              </div>

              {/* –î–µ–º–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç–∞ */}
              <div className="space-y-3">
                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-xs font-bold">
                    –ï
                  </div>
                  <div className="flex-1">
                    <div className="text-sm text-gray-500 dark:text-gray-400 mb-1">
                      –ï–ª–∏–∑–∞–≤–µ—Ç–∞ ‚Ä¢ 00:15
                    </div>
                    <div className="text-gray-800 dark:text-gray-200">
                      –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞ —É –≤—Å–µ—Ö? –ì–æ—Ç–æ–≤—ã –æ–±—Å—É–∂–¥–∞—Ç—å –Ω–æ–≤—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏?
                    </div>
                  </div>
                </div>

                <div className="flex items-start gap-3">
                  <div className="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white text-xs font-bold">
                    –ü
                  </div>
                  <div className="flex-1">
                    <div className="text-sm text-gray-500 dark:text-gray-400 mb-1">
                      –ü–æ–ª–∏–Ω–∞ ‚Ä¢ 00:23
                    </div>
                    <div className="text-gray-800 dark:text-gray-200">
                      –î–∞, –æ—Ç–ª–∏—á–Ω–æ! –£ –º–µ–Ω—è –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–¥–µ–π –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É...
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å - –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å */}
          <div className="animate-on-scroll">
            <h3 className="text-3xl font-bold text-gray-900 dark:text-white mb-6">
              –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ—Å—Ç—å
            </h3>
            <p className="text-gray-600 dark:text-gray-300 text-lg mb-8 leading-relaxed">
              –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –Ω–∞ 73 —è–∑—ã–∫ÔøΩÔøΩ—Ö, —ç—Ç–æ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –∏
              –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            </p>

            {/* –Ø–∑—ã–∫–∏ —Å–µ—Ç–∫–æ–π */}
            <div className="grid grid-cols-2 sm:grid-cols-3 gap-4 mb-8">
              {languages.map((lang, index) => (
                <div
                  key={lang.name}
                  className="bg-white dark:bg-gray-800 rounded-xl p-4 border border-gray-200 dark:border-gray-700 hover:shadow-lg transition-all duration-300 hover:scale-105"
                  style={{ animationDelay: `${index * 100}ms` }}
                >
                  <div className="text-center">
                    <div className="text-2xl mb-2">{lang.code}</div>
                    <div className="text-sm font-medium text-gray-900 dark:text-white">
                      {lang.name}
                    </div>
                    <div className="text-xs text-green-600 dark:text-green-400 font-semibold">
                      {lang.accuracy}
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {/* –î–µ–º–æ –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏ */}
            <div className="bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-xl p-6 border border-purple-200 dark:border-purple-700">
              <div className="grid grid-cols-3 gap-4 text-center">
                <div>
                  <div className="text-lg mb-1">‰Ω†Â•ΩÔºÅ</div>
                  <div className="text-xs text-gray-600 dark:text-gray-400">
                    –ö–∏—Ç–∞–π—Å–∫–∏–π
                  </div>
                </div>
                <div>
                  <div className="text-lg mb-1">¬°Hola!</div>
                  <div className="text-xs text-gray-600 dark:text-gray-400">
                    –ò—Å–ø–∞–Ω—Å–∫–∏–π
                  </div>
                </div>
                <div>
                  <div className="text-lg mb-1">ŸÖÿ±ÿ≠ÿ®ÿß</div>
                  <div className="text-xs text-gray-600 dark:text-gray-400">
                    –ê—Ä–∞–±—Å–∫–∏–π
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {features.map((feature, index) => (
            <div
              key={feature.title}
              className={`animate-on-scroll bg-white dark:bg-gray-800 rounded-2xl p-6 border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-500 hover:scale-105 ${
                visibleElements[index + 2]
                  ? "opacity-100 translate-y-0"
                  : "opacity-0 translate-y-8"
              }`}
              style={{ transitionDelay: `${index * 150}ms` }}
            >
              <div
                className={`w-12 h-12 rounded-xl flex items-center justify-center mb-4 bg-${feature.color}-50 dark:bg-${feature.color}-900/20`}
              >
                <feature.icon
                  className={`w-6 h-6 text-${feature.color}-600 dark:text-${feature.color}-400`}
                />
              </div>
              <h4 className="text-lg font-bold text-gray-900 dark:text-white mb-3">
                {feature.title}
              </h4>
              <p className="text-gray-600 dark:text-gray-300 text-sm leading-relaxed">
                {feature.description}
              </p>
            </div>
          ))}
        </div>

        {/* CTA */}
        <div className="text-center mt-16 animate-on-scroll">
          <button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white font-bold py-4 px-8 rounded-full text-lg shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300">
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ ‚Üí
          </button>
        </div>
      </div>
    </section>
  );
}
